import logging
from telegram import Update, KeyboardButton, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# ============ –ù–ê–°–¢–†–û–ô–ö–ò ============
# –í–°–¢–ê–í–¨ –°–í–û–ô –¢–û–ö–ï–ù –°–Æ–î–ê üëá (–±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤, –∫–∞–≤—ã—á–∫–∏ –æ—Å—Ç–∞–≤—å)
TOKEN = "–í–°–¢–ê–í–¨_–°–Æ–î–ê_–°–í–û–ô_–¢–û–ö–ï–ù_–û–¢_BOTFATHER"

# –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–≤–æ—é –∏–≥—Ä—É (GitHub Pages –∏–ª–∏ Netlify)
WEBAPP_URL = "https://—Ç–≤–æ—è-—Å—Å—ã–ª–∫–∞-–Ω–∞-–∏–≥—Ä—É.github.io/"

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# ============ –ö–û–ú–ê–ù–î–´ ============
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ –∏–≥—Ä—É"""
    if not update.message:
        return

    keyboard = [[KeyboardButton("üéÆ –ò–≥—Ä–∞—Ç—å –≤ City Survival")]]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    await update.message.reply_text(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ City Survival!\n\n"
        "üèôÔ∏è –ò—Å—Å–ª–µ–¥—É–π –≥–æ—Ä–æ–¥–∞, —Å—Ç—Ä–æ–π –±–∞—Ä—Ä–∏–∫–∞–¥—ã –∏ –≤—ã–∂–∏–≤–∞–π!\n"
        "üõ°Ô∏è –°–æ–±–∏—Ä–∞–π —Ä–µ—Å—É—Ä—Å—ã –∏ –∑–∞—â–∏—â–∞–π —Å–≤–æ–∏—Ö –∂–∏—Ç–µ–ª–µ–π.\n\n"
        f"üëâ –ù–∞—á–Ω–∏ –∏–≥—Ä—É –∑–¥–µ—Å—å:\n{WEBAPP_URL}",
        reply_markup=reply_markup
    )


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /help ‚Äî –ø–æ–º–æ—â—å"""
    await update.message.reply_text(
        "‚ÑπÔ∏è –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:\n"
        "/start ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
        "/help ‚Äî –ø–æ–º–æ—â—å"
    )


# ============ –ì–õ–ê–í–ù–´–ô –ó–ê–ü–£–°–ö ============
def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ Telegram-–±–æ—Ç–∞"""
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))

    logger.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    app.run_polling()


if __name__ == "__main__":
    main()
